name: CI/CD ECS Pipeline

on:
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    

      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
        
    - name: Log in to Amazon ECR
      run: |
       aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 975050059495.dkr.ecr.us-east-1.amazonaws.com

    - name: Get the latest image tag
      id: get-latest-tag
      run: |
          # Fetch existing tags from ECR
          tags=$(aws ecr list-images --repository-name mihirv21/client --query 'imageIds[*].imageTag' --output text)
          echo "Existing tags: $tags"

          # Find the latest tag
            latest_client_tag=$(echo "$tags" | grep -E '^client-v[0-9]+(\.[0-9]+){0,2}$' | sort -V | tail -n 1)
         
          # Increment the version
          increment_version() {
              local tag=$1
              IFS='.' read -r -a version <<< "${tag#*-v}"
              version[2]=$((version[2]+1)) # Increment patch version
              echo "v${version[0]}.${version[1]}.${version[2]}"
          }
           new_client_version=$(increment_version "$latest_client_tag")
           echo "New client tag: client-$new_client_version"
           echo "NEW_CLIENT_TAG=client-$new_client_version" >> $GITHUB_ENV
           
    - name: Build Docker images
      run: |
          docker compose build

    - name: Tag and push Docker images to ECR
      run: |
          # Tag and push client image
           docker tag client:latest 975050059495.dkr.ecr.us-east-1.amazonaws.com/mihirv21/client:${{ env.NEW_CLIENT_TAG }}
           docker push 975050059495.dkr.ecr.us-east-1.amazonaws.com/mihirv21/client:${{ env.NEW_CLIENT_TAG }}

      # docker tag client:latest 975050059495.dkr.ecr.us-east-1.amazonaws.com/mihirv21:client-${{ env.CLIENT_VERSION }}
      # docker push 975050059495.dkr.ecr.us-east-1.amazonaws.com/mihirv21:client-${{ env.CLIENT_VERSION }}

      # run: |
      
      #   docker tag client:latest 975050059495.dkr.ecr.us-east-1.amazonaws.com/mihirv21:1.${{ env.IMAGE_VERSION }}
      #   # docker tag server:latest 975050059495.dkr.ecr.us-east-1.amazonaws.com/mihirv21:${{ env.S_VERSION }}
      #   docker push 975050059495.dkr.ecr.us-east-1.amazonaws.com/mihirv21:1.${{ env.IMAGE_VERSION }}
      #   # docker push 975050059495.dkr.ecr.us-east-1.amazonaws.com/mihirv21:${{ env.S_VERSION }}

    # - name: Update ECS Client Service
    #   run: |
    #     aws ecs update-service \
    #       --cluster Cluster \
    #       --service Front \
    #       --force-new-deployment \
    #       --region us-east-1

    # - name: Update ECS Server Service
    #   run: |
    #     aws ecs update-service \
    #       --cluster Cluster \
    #       --service Node \
    #       --force-new-deployment \
    #       --region us-east-1
