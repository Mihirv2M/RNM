name: CI/CD ECS Pipeline

on:
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up GitVersion
      uses: gittools/actions/gitversion@v0.7.0
      with:
          versionSpec: '5.x'

    - name: Generate version
      id: gitversion
      run: |
          gitversion /output json /showvariable SemVer > version.json
          echo "VERSION=$(cat version.json | jq -r .SemVer)" >> $GITHUB_ENV

      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
        
    - name: Log in to Amazon ECR
      run: |
        aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 975050059495.dkr.ecr.us-east-1.amazonaws.com


    - name: Build Docker images
      run: |
        docker compose build

    - name: Tag and push Docker images to ECR
      run: |
        echo "Tagging and pushing Docker images with version: ${{ env.VERSION }}"
        docker tag client:latest 975050059495.dkr.ecr.us-east-1.amazonaws.com/mihirv21:client.${{ env.VERSION }}
        # docker tag server:latest 975050059495.dkr.ecr.us-east-1.amazonaws.com/mihirv21:2.${{ env.IMAGE_VERSION }}
        docker push 975050059495.dkr.ecr.us-east-1.amazonaws.com/mihirv21:client-${{ env.VERSION }}


      # run: |
      
      #   docker tag client:latest 975050059495.dkr.ecr.us-east-1.amazonaws.com/mihirv21:1.${{ env.IMAGE_VERSION }}
      #   # docker tag server:latest 975050059495.dkr.ecr.us-east-1.amazonaws.com/mihirv21:${{ env.S_VERSION }}
      #   docker push 975050059495.dkr.ecr.us-east-1.amazonaws.com/mihirv21:1.${{ env.IMAGE_VERSION }}
      #   # docker push 975050059495.dkr.ecr.us-east-1.amazonaws.com/mihirv21:${{ env.S_VERSION }}

    # - name: Update ECS Client Service
    #   run: |
    #     aws ecs update-service \
    #       --cluster Cluster \
    #       --service Front \
    #       --force-new-deployment \
    #       --region us-east-1

    # - name: Update ECS Server Service
    #   run: |
    #     aws ecs update-service \
    #       --cluster Cluster \
    #       --service Node \
    #       --force-new-deployment \
    #       --region us-east-1
