name: CI/CD ECS Pipeline

on:
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
        
    - name: Log in to Amazon ECR
      run: |
        aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 975050059495.dkr.ecr.us-east-1.amazonaws.com

    - name: Fetch latest image version
      id: fetch_version
      env:
        AWS_REGION: "us-east-1"
        REPO_NAME: "mihirv21"
      run: |
        echo "Fetching latest image tags..."
        latest_tags=$(aws ecr list-images --repository-name $REPO_NAME --region $AWS_REGION --query 'imageIds[*].imageTag' --output text)
        echo "Tags found: $latest_tags"

        latest_version=$(echo "$latest_tags" | grep -E '^[0-9]+\.[0-9]+$' | sort -V | tail -n 1)
        echo "Latest version found: $latest_version"
        
        if [ -z "$latest_version" ]; then
          new_version="1"
        else
          major=$(echo $latest_version | cut -d. -f1)
          minor=$(echo $latest_version | cut -d. -f2)
          new_version="$major.$((minor + 1))"
        fi
        
        echo "New version: $new_version"
        echo "IMAGE_VERSION=$new_version" >> $GITHUB_ENV

    - name: Debug IMAGE_VERSION
      run: |
        echo "IMAGE_VERSION=${{ env.IMAGE_VERSION }}"

    - name: Build Docker images
      run: |
        docker compose build

    - name: Tag and push Docker images to ECR
      run: |
        echo "Tagging and pushing Docker images with version: ${{ env.IMAGE_VERSION }}"
        docker tag client:latest 975050059495.dkr.ecr.us-east-1.amazonaws.com/mihirv21:1.${{ env.IMAGE_VERSION }}
        # docker tag server:latest 975050059495.dkr.ecr.us-east-1.amazonaws.com/mihirv21:1.${{ env.IMAGE_VERSION }}
        docker push 975050059495.dkr.ecr.us-east-1.amazonaws.com/mihirv21:1.${{ env.IMAGE_VERSION }}


      # run: |
      
      #   docker tag client:latest 975050059495.dkr.ecr.us-east-1.amazonaws.com/mihirv21:1.${{ env.IMAGE_VERSION }}
      #   # docker tag server:latest 975050059495.dkr.ecr.us-east-1.amazonaws.com/mihirv21:${{ env.S_VERSION }}
      #   docker push 975050059495.dkr.ecr.us-east-1.amazonaws.com/mihirv21:1.${{ env.IMAGE_VERSION }}
      #   # docker push 975050059495.dkr.ecr.us-east-1.amazonaws.com/mihirv21:${{ env.S_VERSION }}

    # - name: Update ECS Client Service
    #   run: |
    #     aws ecs update-service \
    #       --cluster Cluster \
    #       --service Front \
    #       --force-new-deployment \
    #       --region us-east-1

    # - name: Update ECS Server Service
    #   run: |
    #     aws ecs update-service \
    #       --cluster Cluster \
    #       --service Node \
    #       --force-new-deployment \
    #       --region us-east-1
