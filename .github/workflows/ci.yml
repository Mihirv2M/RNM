name: CI/CD Pipeline

on:
  workflow_dispatch: 
    inputs:
      username:
        description: 'Insert Username:'
        required: true
      password:
        description: 'Insert Password:'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create .env file
        run: |
          echo "MONGO_INITDB_ROOT_USERNAME=${{ github.event.inputs.username }}" > .env
          echo "MONGO_INITDB_ROOT_PASSWORD=${{ github.event.inputs.password }}" >> .env
          cat .env

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@13.48.1.207 << 'EOF'
            # Ensure Docker and Docker Compose are installed
            if ! command -v docker &> /dev/null; then
              curl -fsSL https://get.docker.com -o get-docker.sh
              sh get-docker.sh
              sudo usermod -aG docker ec2-user
              newgrp docker
            fi

            if ! command -v docker-compose &> /dev/null; then
              sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi

            # Navigate to project directory
            cd /home/ec2-user

            # Pull latest changes
            git pull origin main

            # Create .env file
            echo "MONGO_INITDB_ROOT_USERNAME=${{ github.event.inputs.username }}" > .env
            echo "MONGO_INITDB_ROOT_PASSWORD=${{ github.event.inputs.password }}" >> .env
            cat .env

            # Build Docker images
            docker-compose build

            # Stop and remove old containers
            docker-compose down

            # Start new containers
            docker-compose up -d
          EOF
